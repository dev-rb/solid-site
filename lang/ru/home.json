{
  "hero": "Гибкая, эффективная, декларативная JavaScript-библиотека для создания пользовательских интерфейсов.",
  "info": "Solid - это чисто реактивная библиотека. Она была разработана с нуля с реактивным ядром. На нее повлияли реактивные принципы, разработанные предыдущими библиотеками.",
  "strengths": [
    {
      "icon": "performant",
      "label": "Производительный",
      "description": "Возглавляет тесты по скорости UI и использованию памяти."
    },
    {
      "icon": "powerful",
      "label": "Мощный",
      "description": "Составные реактивные примитивы прекрасно сочетаются с гибкостью JSX."
    },
    {
      "icon": "pragmatic",
      "label": "Прагматичный",
      "description": "Разумный и адаптированный API делает разработку простой и увлекательной."
    },
    {
      "icon": "productive",
      "label": "Продуктивный",
      "description": "Эргономика и удобство делают создание простых или сложных приложений сущим пустяком."
    }
  ],
  "facts": [
    {
      "label": "6кб",
      "detail": "Мини + Сжатый",
      "link": "https://bundlephobia.com/package/solid-js@1.2.1"
    },
    {
      "label": "11К+",
      "detail": "Звезд на Github",
      "link": "https://star-history.t9t.io/#solidjs/solid"
    },
    {
      "label": "5+ лет",
      "detail": "В разработке"
    },
    {
      "label": "TypeScript",
      "detail": "Поддерживается"
    },
    {
      "label": "Высоко Оценен",
      "detail": "В производительности"
    },
    {
      "label": "Astro и Vite",
      "detail": "Поддерживаются",
      "link": "https://github.com/snowpackjs/astro/tree/main/examples/framework-solid"
    }
  ],
  "example": {
    "headline": "Знакомый и Современный",
    "copy": [
      "Solid стоит на плечах гигантов, особенно React и Knockout. Если вы раньше работали с хуками React, Solid должен показаться очень знакомым. В некоторых моментах модель Solid даже проще, потому что у неё нет ограничения применения как у хуков. Каждый компонент выполняется ровно один раз, а хуки и привязки выполняются по мере обновления их зависимостей.",
      "Хоть Solid и следует той же философии, что и React, с однонаправленным потоком данных, разделением чтения/записи и неизменяемыми интерфейсами, Solid реализован совершенно иначе, без использования виртуального DOM."
    ],
    "link_label": "Прочитать документацию",
    "link": "https://www.solidjs.com/docs/latest#component-apis"
  },
  "reactivity": {
    "headline": "Детальная реактивность - делай больше не теряя производительности",
    "subheadline": "Solid позволяет писать всё приложение на реактивных примитивах: от ваших компонентов в JSX до JavaScript-выражений.",
    "copy": "Это открывает полный контроль над тем, что и когда будет обновляться, даже на минимальном уровне привязки к DOM. Без виртуального DOM или процедур обширного сравнения фреймворк никогда не выполнит больше необходимой работы.",
    "link_label": "Попробовать на практике",
    "link": "https://playground.solidjs.com/?version=1.0.0#NobwRAdghgtgpmAXGGUCWEwBowBcCeADgsrgM4Ae2YZA9gK4BOAxiWGjIbY7gAQi9GcCABM4jXgF9eAM0a0YvAOR0ANmhEBaAFZkA9AHc4AIyUBuADoQOXHv17MhUXHADKaAObRVU2fMUqtOpauuZWVjL0EMy4aLQQvACChIQAFACU-Fa8DvFkfMBQMWgAbnBYvGRwuInFZQC6vAC8Dk4u7l5Qqqm4jPRw6ZYQ2YLVTAkAPCKlDqpQZGRNIEWxZRm8APy8FmArpXA7vIjbYDuSAHwAEmgTetMl51aS4RBCouKp603nvBPJhLw9OcKiJaMx6PAILgAHQeaoAUVUcEhuAAQvgAJIiVJKKApJTpdJWMCSepAA"
  },
  "performance": {
    "headline": ["Помешан на производительности", "как клиента, так и сервера"],
    "copy": "Сильные стороны детальной реактивность как подхода проявляются во всех заметных тестах производительности. Хотя производительность может быть не главным критерием выбора библиотеки, но важно помнить, что опыт конечного пользователя всегда имеет значение. Воспринимайте прирост производительности Solid как подарок, который не добавит вам сложности в разработке. Речь идет о том, чтобы быть быстрым без дополнительных усилий.",
    "link_label": "Читать полную статью",
    "link": "https://ryansolid.medium.com/solidjs-the-tesla-of-javascript-ui-frameworks-6a1d379bc05e"
  },
  "features": {
    "headline": "Полностью загружен фичами.",
    "copy": "Solid поддерживает весь функционал, который вы ожидаете от современного фреймворка, а также улучшает некоторые идеи для улучшения вашего DX.",
    "list": [
      "Фрагменты",
      "Порталы",
      "Контексты",
      "Suspense",
      "Перехватчики Ошибок",
      "Ленивые Компоненты",
      "Параллельный и Асинхронный рендеринг",
      "Неявное Делегирование",
      "Серверный Рендеринг и гидрация на клиенте",
      "Директивы"
    ]
  },
  "benchmarks": {
    "time": "Время",
    "view": "Посмотреть тесты производительности",
    "show_more": "Показать больше тестов производительности на клиенте и сервере",
    "link_label": "JS Framework Benchmark сравнивает производительность браузера по широкому диапазону тестов. Ниже - лучше.",
    "js_benchmark": {
      "title": "JS Framework Benchmark",
      "description": "JS Framework Benchmark сравнивает производительность браузера по широкому диапазону тестов. Ниже - лучше."
    },
    "isomorophic_benchmark": {
      "title": "Тесты производительности в смешанной среде (Результаты поиска)",
      "description": "Этот тест демонстрирует скорость рендеринга на стороне сервера. Выше - лучше."
    }
  }
}
