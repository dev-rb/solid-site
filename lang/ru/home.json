{
  "hero": "Гибкая, эффективная, а так же декларативная JavaScript-библиотека для создания пользовательских интерфейсов.",
  "info": "Solid - это чисто реактивная библиотека. Она была разработана с нуля с реактивным ядром. На нее повлияли реактивные принципы, разработанные предыдущими библиотеками.",
  "strengths": [
    {
      "icon": "performant",
      "label": "Производительный",
      "description": "Возглавляет бенчмарки скорости UI и использования памяти."
    },
    {
      "icon": "powerful",
      "label": "Мощный",
      "description": "Составные реактивные примитивы прекрасно сочетаются с гибкостью JSX."
    },
    {
      "icon": "pragmatic",
      "label": "Прагматичный",
      "description": "Разумный и адаптированный API делает разработку простой и увлекательной."
    },
    {
      "icon": "productive",
      "label": "Продуктивный",
      "description": "Эргономика и удобство делают создание простых или сложных приложений сущим пустяком."
    }
  ],
  "facts": [
    {
      "label": "6кб",
      "detail": "Мини + Сжатый",
      "link": "https://bundlephobia.com/package/solid-js@1.0.0"
    },
    {
      "label": "11К+",
      "detail": "Звезд на Github",
      "link": "https://star-history.t9t.io/#solidjs/solid"
    },
    {
      "label": "5+ лет",
      "detail": "В разработке"
    },
    {
      "label": "TypeScript",
      "detail": "Поддерживается"
    },
    {
      "label": "Высоко Оценен",
      "detail": "В производительности"
    },
    {
      "label": "Astro и Vite",
      "detail": "Поддерживаются",
      "link": "https://github.com/snowpackjs/astro/tree/main/examples/framework-solid"
    }
  ],
  "example": {
    "headline": "Знакомый и Современный",
    "copy": [
      "Solid стоит на плечах гигантов, особенно React и Knockout. Если вы раньше работали с хуками React, Solid должен показаться очень естественным. Фактически, даже более естественным, поскольку модель Solid намного проще без правил хуков. Каждый компонент выполняется ровно один раз, а хуки и привязки уже по мере обновления их зависимостей.",
      "Хоть Solid  и следует той же философии, что и React, с однонаправленным потоком данных, разделением чтения/записи и неизменяемыми интерфейсами, Solid реализован совершенно иначе, без использования виртуального DOM."
    ],
    "link_label": "Прочитать документацию",
    "link": "https://www.solidjs.com/docs/latest#component-apis"
  },
  "reactivity": {
    "headline": "Мелкозернистая реактивность - делай больше с меньшими затратами",
    "subheadline": "Каждая часть Solid, в JSX шаблонах, построена по принципу, от примитивов, до JavaScript-выражений.",
    "copy": "Это открывает полный контроль над тем, что и когда будет обновляться, даже на минимальном уровне привязки к DOM. Без виртуального DOM или процедур обширного сравнения фреймворк никогда не выполнит больше заданной работы.",
    "link_label": "Посмотреть это в деле",
    "link": "https://playground.solidjs.com/?version=1.0.0#NobwRAdghgtgpmAXGGUCWEwBowBcCeADgsrgM4Ae2YZA9gK4BOAxiWGjIbY7gAQi9GcCABM4jXgF9eAM0a0YvAOR0ANmhEBaAFZkA9AHc4AIyUBuADoQOXHv17MhUXHADKaAObRVU2fMUqtOpauuZWVjL0EMy4aLQQvACChIQAFACU-Fa8DvFkfMBQMWgAbnBYvGRwuInFZQC6vAC8Dk4u7l5Qqqm4jPRw6ZYQ2YLVTAkAPCKlDqpQZGRNIEWxZRm8APy8FmArpXA7vIjbYDuSAHwAEmgTetMl51aS4RBCouKp603nvBPJhLw9OcKiJaMx6PAILgAHQeaoAUVUcEhuAAQvgAJIiVJKKApJTpdJWMCSepAA"
  },
  "performance": {
    "headline": [
      "Фокусирован на производительности",
      "как клиента, так и сервера"
    ],
    "copy": "Сильные стороны мелкозернистой реактивности как подхода проявляются во всех заметных бенчмарках. Хотя производительность может быть не в центре вашего внимания, опыт конечного пользователя всегда имеет значение. Воспринимайте прирост производительности Solid как бесплатную победу без дополнительных сложностей в разработке. Речь идет о том, чтобы быть быстрым без усилий.",
    "link_label": "Читать полную статью",
    "link": "https://ryansolid.medium.com/solidjs-the-tesla-of-javascript-ui-frameworks-6a1d379bc05e"
  },
  "features": {
    "headline": "Полностью загружен всеми фичами.",
    "copy": "Solid поддерживает весь частый и ожидаемый функционал, а так же расширяет аспекты для увеличения DX.",
    "list": [
      "Фрагменты",
      "Порталы",
      "Контексты",
      "Задержки",
      "Перехватчики Ошибок",
      "Ленивые Компоненты",
      "Параллельный и Асинхронный рендеринг",
      "Неявное Делегирование",
      "Гидратация и Серверный Рендеринг",
      "Директивы"
    ]
  },
  "benchmarks": {
    "time": "Время",
    "view": "Посмотреть бенчмарки",
    "show_more": "Показать больше клиентских и серверных бенчмарков",
    "link_label": "JS Framework Benchmark сравнивает производительность браузера по широкому диапазону тестов. Ниже - лучше.",
    "js_benchmark": {
      "title": "JS Framework Benchmark",
      "description": "JS Framework Benchmark сравнивает производительность браузера по широкому диапазону тестов. Ниже - лучше."
    },
    "isomorophic_benchmark": {
      "title": "Бенчмарки изоморфного UI (Результаты поиска)",
      "description": "Этот бенчмарк тестирует скорость рендеринга сервера. Выше - лучше."
    }
  }
}
